{
  "_args": [
    [
      "grun",
      "/Users/Sbinion/Documents/00Projects/bloc/bloc-frontend-project-starter"
    ]
  ],
  "_from": "grun@*",
  "_id": "grun@0.2.0",
  "_inCache": true,
  "_location": "/grun",
  "_npmUser": {
    "email": "brilliantpenguin@gmail.com",
    "name": "ystskm"
  },
  "_npmVersion": "1.3.11",
  "_phantomChildren": {},
  "_requested": {
    "name": "grun",
    "raw": "grun",
    "rawSpec": "",
    "scope": null,
    "spec": "*",
    "type": "range"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/grun/-/grun-0.2.0.tgz",
  "_shasum": "5096a72f9d16215efdddd732b8f771fe72d7c95c",
  "_shrinkwrap": null,
  "_spec": "grun",
  "_where": "/Users/Sbinion/Documents/00Projects/bloc/bloc-frontend-project-starter",
  "author": {
    "email": "sakamoto@liberty-technology.biz",
    "name": "Yoshitaka Sakamoto",
    "url": "http://github.com/ystskm"
  },
  "bugs": {
    "url": "https://github.com/ystskm/node-grunt-runner/issues"
  },
  "contributors": [],
  "dependencies": {
    "grunt": "0.4.1",
    "micro-pipe": "0.1.4",
    "named-argv": "0.1.0",
    "underscore": "1.5.2"
  },
  "description": "Utility for executing grunt tasks.",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "5096a72f9d16215efdddd732b8f771fe72d7c95c",
    "tarball": "http://registry.npmjs.org/grun/-/grun-0.2.0.tgz"
  },
  "installable": true,
  "keywords": [
    "grunt",
    "runner",
    "util"
  ],
  "main": "index.js",
  "maintainers": [
    {
      "name": "ystskm",
      "email": "brilliantpenguin@gmail.com"
    }
  ],
  "name": "grun",
  "optionalDependencies": {},
  "readme": "# grunt-runner, grun\n\nSupport for executing grunt tasks.  \nCLI operation is not required to use.\n\n## Install\n\nInstall with [npm](http://npmjs.org/):\n```sh\n    npm install grunt-runner\n```\n## API - runs grunt tasks under \"tasks\" directory \nassume that directory exists just below executing script file\n```js\n    require('grunt-runner')(__dirname)\n```\n*,or use alias*\n```js\n    require('grunt-runner').run(__dirname)\n```\n### - example for running configuration\n_Default: package.json_\n```js\n    {\n      \"name\": \"grunt-runner-test\",\n      \"version\": \"0.1.0\",\n      \"taskList\": [\"run\"],\n      \"configure\": {\n      }\n    }\n```\n####before example for Gruntfile.js, note that underscore is included.\nThis object is extended for running tasks.  \nsee: __lib/task-util.js__\n```js\nvar _ = require('grunt-runner')._;\n```\n### - example for Gruntfile.js\nin this case deploy in_ __\"tasks/run\"__ _directory\n```js\nmodule.exports = function(grunt) {\n  grunt.registerTask('run', 'test for grunt-runner', function() {\n          ...\n  });\n};\n```\n### - if you want add tasks more easily, use utilities\n```js\nvar path = require('path'), fs = require('fs'), _ = require('grunt-runner')._;\nvar taskname = __dirname.split('/').pop(); // run\n\nmodule.exports = function(grunt) {\n  var tmes = 'Grunt Runner test: ' + taskname;\n  grunt.registerTask(taskname, tmes, _.caught(function() {\n    gruntRunnerTest(grunt, _.mixedConfigure(grunt, taskname), this);\n  }, grunt.fail));\n};\n\nfunction gruntRunnerTest(grunt, conf, gtask) {\n\n  var line = [], done = gtask.async(), stop = function(e) {\n    grunt.fail.fatal(e);\n  }, log = function(m) {\n    _.util.log('[' + gtask.name + '] ' + m);\n  };\n\n  line.push(function() {\n    log('done.'), done();\n    grunt.runner.emit('end');\n  });\n\n  _.micropipe(line);\n\n}\n```\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "http://github.com/ystskm/node-grunt-runner"
  },
  "scripts": {
    "test": "node test/_runner.js"
  },
  "version": "0.2.0"
}
